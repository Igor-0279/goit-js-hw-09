{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAkB,CAAC,QAAS,OAAQ,UAU1CC,SAASC,cAAc,SAASC,iBAAiB,UAAUC,IACzDA,EAAEC,iBACF,MAAOC,EAAOC,EAAMC,GAAyBR,EAPtBS,KACrBC,IAAmBT,SAASC,cAAc,gBAAgBQ,OAAoBC,QAOhFC,MAAMC,KAAK,CAAEC,OAAQN,IAAUO,SAAQ,CAACC,EAAGC,IAO7C,SAAuBC,EAAUZ,GAC/B,OAAO,IAAIa,SAAQ,CAACC,EAASC,KAC3BC,YAAW,IApBaC,KAAKC,SAAW,GAsB7BJ,EAAQ,uBAAqBF,QAAiBZ,OAE9Ce,EAAO,sBAAoBH,QAAeZ,QAElDA,EAAM,G,CAdTmB,CAAcR,EAAI,EAAGX,EAAQC,EAAOU,GACjCS,KAAKC,EAAA7B,GAAS8B,OAAOC,SACrBC,MAAMH,EAAA7B,GAAS8B,OAAOG,UAC1B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst timeInputFields = ['delay', 'step', 'amount'];\n\nconst shouldResolve = () => Math.random() > 0.5;\n\nconst getinputValues = timeInputFields => {\n  return timeInputFields.map(\n    timeInputField => +document.querySelector(`input[name= \"${timeInputField}\"]`).value\n  );\n};\n\ndocument.querySelector('.form').addEventListener('submit', e => {\n  e.preventDefault();\n  const [delay, step, amount] = getinputValues(timeInputFields);\n  Array.from({ length: amount }).forEach((p, i) =>\n    createPromise(i + 1, delay + step * i)\n      .then(Notiflix.Notify.success)\n      .catch(Notiflix.Notify.failure)\n  );\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve()) {\n        return resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        return reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$timeInputFields","document","querySelector","addEventListener","e","preventDefault","delay","step","amount","map","timeInputField","value","Array","from","length","forEach","p","i","position","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.777851f1.js.map"}